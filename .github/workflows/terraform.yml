name: "Terraform"

on:
  push:
    branches:
      - train

defaults:
      run:
        working-directory: ./infrastructure
    
jobs:
  setup-infra:
    runs-on: ubuntu-20.04
    outputs:
      output1: ${{ steps.tf_output.outputs.address }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
      
      - name : Terraform Output
        id: tf_output
        run : |
         export GPUADDRESS=$(terraform output -raw gpu-instance-address) 
         echo "::set-output name=address::$GPUADDRESS"


  modelcomputation:
    needs : setup-infra
    runs-on: ubuntu-20.04
   
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Wait 30s for Resource init 
        run: sleep 30
      
      - name : SSH Connection
        env:
            PRIVATE_KEY: ${{ secrets.AWS_EC2_PRIVATE_KEY  }}
            WANDB_TOKEN: ${{ secrets.WANDB_API_TOKEN  }}
            KAGGLE_CREDS: ${{ secrets.KAGGLE_API_CREDS  }}
        
        run : |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          echo "$WANDB_TOKEN" > "W&B.txt"
          echo "$KAGGLE_CREDS" > "kaggle.json"
          scp -o StrictHostKeyChecking=no -i private_key "W&B.txt" "kaggle.json" ubuntu@${{needs.setup-infra.outputs.output1}}:~/ 
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@${{needs.setup-infra.outputs.output1}} '
            ls
            aws s3 ls s3://dl-model-bucket-cytech64
            git clone https://github.com/lo0kat/soundGen.git
            python3 -V
            cd soundGen/backend/model/
            git checkout train
            mv ~/kaggle.json ~/"W&B.txt" train_model/
            pip install -r train_model/utils/requirements.txt
            docker build -t model-training .
            docker run -it --rm --runtime=nvidia -v ~/Code/EISTI/PFE/soundGen/backend/model/train_model:/model/train_model model-training /bin/bash
            python3 train_model/lancement_model.py -p PREPROCESS 0
            exit
            python3 train_model/utils/save.py
            ls
          '
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Destroy
        run: terraform destroy -auto-approve -target aws_instance.training_instance -target aws_security_group.sg -target random_pet.sg